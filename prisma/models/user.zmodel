import "base"
import "../../src/auth/schema"

enum UserRole {
	USER
	ADMIN
}

model User extends Base {
	email         String    @unique @db.Citext @email @trim @lower @length(min: 1)
	emailVerified DateTime?

	role          UserRole  @default(USER) @deny("all", auth().role != ADMIN)

	accounts      Account[]
	sessions      Session[]

	@@allow("read", auth() == this)
}

abstract model UserEntity extends Base {
	userId String @default(auth().id)
	user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@allow("create", userId == auth().id)
	@@allow("update", userId == auth().id && future().userId == auth().id)
}

abstract model PrivateUserEntity extends UserEntity {
	@@allow("read", userId == auth().id)
}

abstract model PublicUserEntity extends UserEntity {
	@@allow("read", true)
}
